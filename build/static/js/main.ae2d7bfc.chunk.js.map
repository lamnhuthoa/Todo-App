{"version":3,"sources":["components/TodoList/todoListSlice.js","components/Todo/index.js","redux/selectors.js","components/TodoList/index.js","components/Filters/filtersSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["createSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","priorityColorMapping","High","Medium","Low","Todo","todoId","dispatch","useDispatch","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","todoListSlice","actions","color","margin","todosRemainingSelector","createSelector","todoList","filters","search","status","searchText","priorities","filter","length","includes","TodoList","todoName","setTodoName","setPriority","useSelector","height","position","overflowY","span","map","bottom","left","right","Group","display","compact","value","event","target","defaultValue","Option","label","type","onClick","uuidv4","searchFilterChange","statusFilterChange","priorityFilterChange","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filteredPriorities","setFilteredPriorities","Paragraph","fontWeight","marginTop","placeholder","filtersSlice","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"wUAsBeA,cAAY,CACvBC,KAAM,WACNC,aAAc,CACV,CAAEC,GAAI,EAAGF,KAAM,aAAcG,WAAW,EAAOC,SAAU,UACzD,CAAEF,GAAI,EAAGF,KAAM,cAAeG,WAAW,EAAMC,SAAU,QACzD,CAAEF,GAAI,EAAGF,KAAM,mBAAoBG,WAAW,EAAOC,SAAU,QAEnEC,SAAU,CACNC,QAAS,SAACC,EAAOC,GAEbD,EAAME,KAAKD,EAAOE,QACrB,EACDC,iBAAkB,SAACJ,EAAOC,GACtB,IAAMI,EAAcL,EAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAKZ,KAAOM,EAAOE,OAAvB,IAChCE,IACCA,EAAYT,WAAaS,EAAYT,UAE5C,K,OCjCHY,EAAuB,CACzBC,KAAM,MACNC,OAAQ,OACRC,IAAK,QAGM,SAASC,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,OAAQpB,EAA6B,EAA7BA,KAAMI,EAAuB,EAAvBA,SAAUD,EAAa,EAAbA,UAC7CkB,EAAWC,cACjB,EAA8BC,mBAASpB,GAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KAOA,OACI,eAAC,IAAD,CACIC,QAAQ,gBACRC,MAAK,aACDC,aAAc,GACVJ,EAAU,CAAEK,QAAS,GAAKC,eAAgB,gBAAmB,CAAC,GAJ1E,UAOI,cAAC,IAAD,CAAUN,QAASA,EAASO,SAbb,WACnBN,GAAYD,GACZH,EAASW,EAAcC,QAAQtB,iBAAiBS,GACnD,EAUO,SACKpB,IAEL,cAAC,IAAD,CAAKkC,MAAOnB,EAAqBX,GAAWuB,MAAO,CAAEQ,OAAQ,GAA7D,SACK/B,MAIhB,C,qBC9BYgC,EAAyBC,aAFN,SAAC9B,GAAD,OAAWA,EAAM+B,QAAjB,IAHE,SAAC/B,GAAD,OAAWA,EAAMgC,QAAQC,MAAzB,IACE,SAACjC,GAAD,OAAWA,EAAMgC,QAAQE,MAAzB,IACI,SAAClC,GAAD,OAAWA,EAAMgC,QAAQnC,QAAzB,IAGmG,SAACkC,EAAUI,EAAYD,EAAQE,GACtK,OAAOL,EAASM,QAAO,SAAC9B,GACpB,MAAe,QAAX2B,EACOE,EAAWE,OACZ/B,EAAKd,KAAK8C,SAASJ,IAAeC,EAAWG,SAAShC,EAAKV,UAC3DU,EAAKd,KAAK8C,SAASJ,GAGzB5B,EAAKd,KAAK8C,SAASJ,KACJ,cAAXD,EAAyB3B,EAAKX,WAAaW,EAAKX,cAChDwC,EAAWE,QAASF,EAAWG,SAAShC,EAAKV,UAExD,GACJ,ICXc,SAAS2C,IACpB,MAAgCxB,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAAgC1B,mBAAS,UAAzC,mBAAOnB,EAAP,KAAiB8C,EAAjB,KACM7B,EAAWC,cAEXgB,EAAWa,YAAYf,GAqB7B,OACI,eAAC,IAAD,CAAKT,MAAO,CAAEyB,OAAQ,oBAAqBC,SAAU,WAAYC,UAAW,UAA5E,UACI,cAAC,IAAD,CAAKC,KAAM,GAAI5B,MAAO,CAAEyB,OAAQ,oBAAqBE,UAAW,QAAhE,SACKhB,EAASkB,KAAI,SAAA1C,GAAI,OACd,cAACK,EAAD,CAAoBC,OAAQN,EAAKZ,GAAIF,KAAMc,EAAKd,KAAMI,SAAUU,EAAKV,SAAUD,UAAWW,EAAKX,WAApFW,EAAKZ,GADF,MAItB,cAAC,IAAD,CAAKqD,KAAM,GAAI5B,MAAO,CAAC0B,SAAU,WAAYI,OAAQ,IAAKC,KAAM,IAAKC,MAAO,KAA5E,SACI,eAAC,IAAMC,MAAP,CAAajC,MAAO,CAAEkC,QAAS,QAAUC,SAAO,EAAhD,UACI,cAAC,IAAD,CAAOC,MAAOf,EAAUjB,SA5Bd,SAACiC,GACvBf,EAAYe,EAAMC,OAAOF,MAC5B,IA2Be,eAAC,IAAD,CAAQG,aAAa,SAASH,MAAO3D,EAAU2B,SAzBlC,SAACgC,GAC1Bb,EAAYa,EACf,EAuBe,UACI,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACI,cAAC,IAAD,CAAKlC,MAAM,MAAX,oBAEJ,cAAC,IAAOiC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACI,cAAC,IAAD,CAAKlC,MAAM,OAAX,sBAEJ,cAAC,IAAOiC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACI,cAAC,IAAD,CAAKlC,MAAM,OAAX,sBAGR,cAAC,IAAD,CAAQmC,KAAK,UAAUC,QAhCjB,WAClBrB,EAAY,IACZC,EAAY,UACZ7B,EAASW,EAAcC,QAAQ3B,QAAQ,CACnCJ,GAAIqE,cACJvE,KAAMgD,EACN5C,SAAUA,EACVD,WAAW,IAElB,EAuBe,wBAOnB,C,aC9BcJ,cAAY,CACvBC,KAAM,UACNC,aAAc,CACVuC,OAAQ,GACRC,OAAQ,MACRrC,SAAU,IAEdC,SAAU,CACNmE,mBAAoB,SAACjE,EAAOC,GAExBD,EAAMiC,OAAShC,EAAOE,OACzB,EACD+D,mBAAoB,SAAClE,EAAOC,GACxBD,EAAMkC,OAASjC,EAAOE,OACzB,EACDgE,qBAAsB,SAACnE,EAAOC,GAC1BD,EAAMH,SAAWI,EAAOE,OAC3B,KC5CDiE,EAAWC,IAAXD,OAEO,SAASE,IACpB,IAAMxD,EAAWC,cACjB,EAAoCC,mBAAS,IAA7C,mBAAOmB,EAAP,KAAmBoC,EAAnB,KACA,EAAwCvD,mBAAS,OAAjD,mBAAOwD,EAAP,KAAqBC,EAArB,KACA,EAAoDzD,mBAAS,IAA7D,mBAAO0D,EAAP,KAA2BC,EAA3B,KAiBA,OACI,eAAC,IAAD,CAAKxD,QAAQ,SAAb,UACI,eAAC,IAAD,CAAK6B,KAAM,GAAX,UACI,cAAC,IAAW4B,UAAZ,CACIxD,MAAO,CAAEyD,WAAY,OAAQxD,aAAc,EAAGyD,UAAW,IAD7D,oBAKA,cAACV,EAAD,CAAQW,YAAY,oBAAoBvB,MAAOrB,EAAYX,SAvBxC,SAACiC,GAC5Bc,EAAcd,EAAMC,OAAOF,OAC3B1C,EAASkE,EAAatD,QAAQuC,mBAAmBR,EAAMC,OAAOF,OACjE,OAsBO,eAAC,IAAD,CAAKyB,GAAI,GAAT,UACI,cAAC,IAAWL,UAAZ,CACIxD,MAAO,CAAEyD,WAAY,OAAQxD,aAAc,EAAGyD,UAAW,IAD7D,8BAKA,eAAC,IAAMzB,MAAP,CAAaG,MAAOgB,EAAchD,SA1BnB,SAACiC,GACxBgB,EAAgBhB,EAAMC,OAAOF,OAC7B1C,EAASkE,EAAatD,QAAQwC,mBAAmBT,EAAMC,OAAOF,OACjE,EAuBW,UACI,cAAC,IAAD,CAAOA,MAAM,MAAb,iBACA,cAAC,IAAD,CAAOA,MAAM,YAAb,uBACA,cAAC,IAAD,CAAOA,MAAM,OAAb,yBAGR,eAAC,IAAD,CAAKyB,GAAI,GAAT,UACI,cAAC,IAAWL,UAAZ,CACIxD,MAAO,CAAEyD,WAAY,OAAQxD,aAAc,EAAGyD,UAAW,IAD7D,gCAKA,eAAC,IAAD,CACII,KAAK,WACLC,YAAU,EACVJ,YAAY,gBACZ3D,MAAO,CAAEgE,MAAO,QAChB5B,MAAOkB,EACPlD,SAvCa,SAACgC,GAC1BmB,EAAsBnB,GACtB1C,EAASkE,EAAatD,QAAQyC,qBAAqBX,GACtD,EA8BW,UAQI,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACI,cAAC,IAAD,CAAKlC,MAAM,MAAX,oBAEJ,cAAC,IAAOiC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACI,cAAC,IAAD,CAAKlC,MAAM,OAAX,sBAEJ,cAAC,IAAOiC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACI,cAAC,IAAD,CAAKlC,MAAM,OAAX,2BAMvB,CCzED,IAAQ0D,EAAUC,IAAVD,MAyBOE,MAvBf,WACE,OACE,sBACEnE,MAAO,CACLgE,MAAO,IACPxD,OAAQ,SACR0B,QAAS,OACTkC,cAAe,SACfC,gBAAiB,QACjBC,QAAS,GACTC,UAAW,qEACXC,aAAc,EACd/C,OAAQ,QAVZ,UAaE,cAACwC,EAAD,CAAOjE,MAAO,CAAEyE,UAAW,UAA3B,wBACA,cAACvB,EAAD,IACA,cAAC,IAAD,IACA,cAAC9B,EAAD,MAGL,ECPcsD,EAPDC,YAAe,CACzBC,QAAS,CACLhE,QAASgD,EAAagB,QACtBjE,SAAUN,EAAcuE,WCVhCC,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJK,SAASC,eAAe,Q","file":"static/js/main.ae2d7bfc.chunk.js","sourcesContent":["// const initState = [\r\n//     { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n//     { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n//     { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n// ]\r\n\r\n// const todoListReducer = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case 'todoList/addTodo':\r\n//             return [...state, action.payload];\r\n\r\n//         case 'todoList/toggleTodoStatus':\r\n//             return state.map(todo => todo.id === action.payload ? {...todo, completed: !todo.completed} : todo);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default todoListReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n    name: 'todoList',\r\n    initialState: [\r\n        { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n        { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n        { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            //mutation || IMMER\r\n            state.push(action.payload)\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.find(todo => todo.id === action.payload);\r\n            if(currentTodo) {\r\n                currentTodo.completed = !currentTodo.completed;\r\n            }\r\n        }\r\n    }\r\n})","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { toggleTodoStatus } from '../../redux/actions';\r\nimport todoListSlice from '../TodoList/todoListSlice';\r\n\r\nconst priorityColorMapping = {\r\n    High: 'red',\r\n    Medium: 'blue',\r\n    Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ todoId, name, priority, completed }) {\r\n    const dispatch = useDispatch();\r\n    const [checked, setChecked] = useState(completed);\r\n\r\n    const toggleCheckbox = () => {\r\n        setChecked(!checked);\r\n        dispatch(todoListSlice.actions.toggleTodoStatus(todoId))\r\n    };\r\n\r\n    return (\r\n        <Row\r\n            justify='space-between'\r\n            style={{\r\n                marginBottom: 3,\r\n                ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n            }}\r\n        >\r\n            <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n                {name}\r\n            </Checkbox>\r\n            <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n                {priority}\r\n            </Tag>\r\n        </Row>\r\n    );\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const searchTextSelector = (state) => state.filters.search;\r\nexport const filterStatusSelector = (state) => state.filters.status;\r\nexport const filterPrioritiesSelector = (state) => state.filters.priority;\r\nexport const todoListSelector = (state) => state.todoList;\r\n\r\nexport const todosRemainingSelector = createSelector(todoListSelector, searchTextSelector, filterStatusSelector, filterPrioritiesSelector, (todoList, searchText, status, priorities) => {\r\n    return todoList.filter((todo) => {\r\n        if (status === 'All') {\r\n            return priorities.length\r\n                ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n                : todo.name.includes(searchText);\r\n        }\r\n        return (\r\n            todo.name.includes(searchText) \r\n            && (status === 'Completed' ? todo.completed : !todo.completed) \r\n            && (priorities.length ? priorities.includes(todo.priority) : true)\r\n        );\r\n    });\r\n})","import { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { addTodo } from '../../redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { todosRemainingSelector } from '../../redux/selectors';\r\nimport todoListSlice from './todoListSlice';\r\n\r\nexport default function TodoList() {\r\n    const [todoName, setTodoName] = useState('');\r\n    const [priority, setPriority] = useState('Medium');\r\n    const dispatch = useDispatch();\r\n\r\n    const todoList = useSelector(todosRemainingSelector);\r\n\r\n    const handleInputChange = (event) => {\r\n        setTodoName(event.target.value);\r\n    }\r\n\r\n    const handlePriorityChange = (value) => {\r\n        setPriority(value)\r\n    }\r\n\r\n    const handleAddTodo = () => {\r\n        setTodoName('');\r\n        setPriority('Medium');\r\n        dispatch(todoListSlice.actions.addTodo({\r\n            id: uuidv4(),\r\n            name: todoName,\r\n            priority: priority,\r\n            completed: false,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Row style={{ height: 'calc(100% - 40px)', position: 'relative', overflowY: 'hidden' }}>\r\n            <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n                {todoList.map(todo =>\r\n                    <Todo key={todo.id} todoId={todo.id} name={todo.name} priority={todo.priority} completed={todo.completed}/>\r\n                )}\r\n            </Col>\r\n            <Col span={24} style={{position: 'absolute', bottom: '0', left: '0', right: '0'}}>\r\n                <Input.Group style={{ display: 'flex' }} compact>\r\n                    <Input value={todoName} onChange={handleInputChange} />\r\n                    <Select defaultValue=\"Medium\" value={priority} onChange={handlePriorityChange}>\r\n                        <Select.Option value='High' label='High'>\r\n                            <Tag color='red'>High</Tag>\r\n                        </Select.Option>\r\n                        <Select.Option value='Medium' label='Medium'>\r\n                            <Tag color='blue'>Medium</Tag>\r\n                        </Select.Option>\r\n                        <Select.Option value='Low' label='Low'>\r\n                            <Tag color='gray'>Low</Tag>\r\n                        </Select.Option>\r\n                    </Select>\r\n                    <Button type='primary' onClick={handleAddTodo}>\r\n                        Add\r\n                    </Button>\r\n                </Input.Group>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","// const initState = {\r\n//     search: '',\r\n//     status: 'All',\r\n//     priority: []\r\n// };\r\n\r\n// const filtersReducer = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case 'filters/searchFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 search: action.payload\r\n//             };\r\n//         case 'filters/statusFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 status: action.payload\r\n//             }\r\n//         case 'filters/priorityFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 priority: action.payload\r\n//             }\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default filtersReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        search: '',\r\n        status: 'All',\r\n        priority: []\r\n    },\r\n    reducers: {\r\n        searchFilterChange: (state, action) => {\r\n            //mutation || IMMER\r\n            state.search = action.payload\r\n        },\r\n        statusFilterChange: (state, action) => {\r\n            state.status = action.payload\r\n        },\r\n        priorityFilterChange: (state, action) => {\r\n            state.priority = action.payload\r\n        }\r\n    }\r\n})","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport filtersSlice from './filtersSlice';\r\n// import { priorityFilterChange, searchFilterchange, statusFilterChange } from '../../redux/actions';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n    const dispatch = useDispatch();\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filterStatus, setFilterStatus] = useState('All');\r\n    const [filteredPriorities, setFilteredPriorities] = useState([]);\r\n\r\n    const handleSearchTextChange = (event) => {\r\n        setSearchText(event.target.value);\r\n        dispatch(filtersSlice.actions.searchFilterChange(event.target.value));\r\n    }\r\n\r\n    const handleStatusChange = (event) => {\r\n        setFilterStatus(event.target.value);\r\n        dispatch(filtersSlice.actions.statusFilterChange(event.target.value));\r\n    }\r\n\r\n    const handlePriorityChange = (value) => {\r\n        setFilteredPriorities(value);\r\n        dispatch(filtersSlice.actions.priorityFilterChange(value));\r\n    }\r\n\r\n    return (\r\n        <Row justify='center'>\r\n            <Col span={24}>\r\n                <Typography.Paragraph\r\n                    style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n                >\r\n                    Search\r\n                </Typography.Paragraph>\r\n                <Search placeholder='input search text' value={searchText} onChange={handleSearchTextChange} />\r\n            </Col>\r\n            <Col sm={24}>\r\n                <Typography.Paragraph\r\n                    style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n                >\r\n                    Filter By Status\r\n                </Typography.Paragraph>\r\n                <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n                    <Radio value='All'>All</Radio>\r\n                    <Radio value='Completed'>Completed</Radio>\r\n                    <Radio value='Todo'>To do</Radio>\r\n                </Radio.Group>\r\n            </Col>\r\n            <Col sm={24}>\r\n                <Typography.Paragraph\r\n                    style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n                >\r\n                    Filter By Priority\r\n                </Typography.Paragraph>\r\n                <Select\r\n                    mode='multiple'\r\n                    allowClear\r\n                    placeholder='Please select'\r\n                    style={{ width: '100%' }}\r\n                    value={filteredPriorities}\r\n                    onChange={handlePriorityChange}\r\n                >\r\n                    <Select.Option value='High' label='High'>\r\n                        <Tag color='red'>High</Tag>\r\n                    </Select.Option>\r\n                    <Select.Option value='Medium' label='Medium'>\r\n                        <Tag color='blue'>Medium</Tag>\r\n                    </Select.Option>\r\n                    <Select.Option value='Low' label='Low'>\r\n                        <Tag color='gray'>Low</Tag>\r\n                    </Select.Option>\r\n                </Select>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\",\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>MINI TODOS</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// import { legacy_createStore as createStore} from 'redux'\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import rootReducer from './reducer';\r\n\r\n// const composeEnhancers = composeWithDevTools();\r\n\r\n// const store = createStore(rootReducer, composeEnhancers);\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport filtersSlice from '../components/Filters/filtersSlice';\r\nimport todoListSlice from '../components/TodoList/todoListSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        filters: filtersSlice.reducer,\r\n        todoList: todoListSlice.reducer,\r\n    },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}