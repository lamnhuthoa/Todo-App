{"ast":null,"code":"// const initState = [\n//     { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\n//     { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\n//     { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\n// ]\n// const todoListReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case 'todoList/addTodo':\n//             return [...state, action.payload];\n//         case 'todoList/toggleTodoStatus':\n//             return state.map(todo => todo.id === action.payload ? {...todo, completed: !todo.completed} : todo);\n//         default:\n//             return state;\n//     }\n// }\n// export default todoListReducer;\nimport { createSlice } from '@reduxjs/toolkit';\nexport const todoListSlice = createSlice({\n  name: 'todoList',\n  initialState: [{\n    id: 1,\n    name: 'Learn Yoga',\n    completed: false,\n    priority: 'Medium'\n  }, {\n    id: 2,\n    name: 'Learn Redux',\n    completed: true,\n    priority: 'High'\n  }, {\n    id: 3,\n    name: 'Learn JavaScript',\n    completed: false,\n    priority: 'Low'\n  }],\n  reducers: {\n    addTodo: (state, action) => {\n      //mutation || IMMER\n      state.push(action.payload);\n    },\n    toggleTodoStatus: (state, action) => {\n      const currentTodo = state.filter(todo => todo.id === action.payload);\n      currentTodo.completed = !currentTodo.completed;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","todoListSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","filter","todo"],"sources":["C:/Users/Admin/Desktop/todo-app/src/components/TodoList/TodoListSlice.js"],"sourcesContent":["// const initState = [\r\n//     { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n//     { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n//     { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n// ]\r\n\r\n// const todoListReducer = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case 'todoList/addTodo':\r\n//             return [...state, action.payload];\r\n\r\n//         case 'todoList/toggleTodoStatus':\r\n//             return state.map(todo => todo.id === action.payload ? {...todo, completed: !todo.completed} : todo);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default todoListReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const todoListSlice = createSlice({\r\n    name: 'todoList',\r\n    initialState: [\r\n        { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n        { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n        { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            //mutation || IMMER\r\n            state.push(action.payload)\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.filter(todo => todo.id === action.payload);\r\n            currentTodo.completed = !currentTodo.completed;\r\n        }\r\n    }\r\n})"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,UAD+B;EAErCC,YAAY,EAAE,CACV;IAAEC,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,YAAf;IAA6BG,SAAS,EAAE,KAAxC;IAA+CC,QAAQ,EAAE;EAAzD,CADU,EAEV;IAAEF,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,aAAf;IAA8BG,SAAS,EAAE,IAAzC;IAA+CC,QAAQ,EAAE;EAAzD,CAFU,EAGV;IAAEF,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,kBAAf;IAAmCG,SAAS,EAAE,KAA9C;IAAqDC,QAAQ,EAAE;EAA/D,CAHU,CAFuB;EAOrCC,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxB;MACAD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAJK;IAKNC,gBAAgB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACjC,MAAMI,WAAW,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYM,MAAM,CAACE,OAAxC,CAApB;MACAE,WAAW,CAACT,SAAZ,GAAwB,CAACS,WAAW,CAACT,SAArC;IACH;EARK;AAP2B,CAAD,CAAjC"},"metadata":{},"sourceType":"module"}