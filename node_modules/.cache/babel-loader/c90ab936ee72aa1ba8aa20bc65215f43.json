{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst getInitialTodo = () => {\n  const localTodoList = window.localStorage.getItem('todoList');\n\n  if (localTodoList) {\n    return JSON.parse(localTodoList);\n  }\n\n  window.localStorage.setItem('todoList', JSON.stringify([]));\n  return [];\n};\n\nconst initialValue = {\n  todoList: getInitialTodo()\n};\nexport default createSlice({\n  name: 'todoList',\n  initialState: initialValue,\n  reducers: {\n    addTodo: (state, action) => {\n      //mutation || IMMER\n      state.push(action.payload);\n      const todoList = window.localStorage.getItem('todoList');\n\n      if (todoList) {\n        const todoListArray = JSON.parse(todoList);\n        todoListArray.push({ ...action.payload\n        });\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArray));\n      }\n    },\n    toggleTodoStatus: (state, action) => {\n      const currentTodo = state.find(todo => todo.id === action.payload);\n\n      if (currentTodo) {\n        currentTodo.completed = !currentTodo.completed;\n      }\n    }\n  }\n});","map":{"version":3,"names":["createSlice","getInitialTodo","localTodoList","window","localStorage","getItem","JSON","parse","setItem","stringify","initialValue","todoList","name","initialState","reducers","addTodo","state","action","push","payload","todoListArray","toggleTodoStatus","currentTodo","find","todo","id","completed"],"sources":["C:/Users/Admin/Desktop/todo-app/src/components/TodoList/todoListSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getInitialTodo = () => {\r\n    const localTodoList = window.localStorage.getItem('todoList');\r\n    if(localTodoList) {\r\n        return JSON.parse(localTodoList);\r\n    }\r\n    window.localStorage.setItem('todoList', JSON.stringify([]));\r\n    return [];\r\n}\r\n\r\nconst initialValue = {\r\n    todoList: getInitialTodo()\r\n}\r\n\r\nexport default createSlice({\r\n    name: 'todoList',\r\n    initialState: initialValue,\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            //mutation || IMMER\r\n            state.push(action.payload)\r\n            const todoList = window.localStorage.getItem('todoList');\r\n            if(todoList) {\r\n                const todoListArray = JSON.parse(todoList);\r\n                todoListArray.push({...action.payload});\r\n                window.localStorage.setItem('todoList', JSON.stringify(todoListArray));\r\n            }\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.find(todo => todo.id === action.payload);\r\n            if(currentTodo) {\r\n                currentTodo.completed = !currentTodo.completed;\r\n            }\r\n        }\r\n    }\r\n})"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;EACzB,MAAMC,aAAa,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAtB;;EACA,IAAGH,aAAH,EAAkB;IACd,OAAOI,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAP;EACH;;EACDC,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,UAA5B,EAAwCF,IAAI,CAACG,SAAL,CAAe,EAAf,CAAxC;EACA,OAAO,EAAP;AACH,CAPD;;AASA,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAEV,cAAc;AADP,CAArB;AAIA,eAAeD,WAAW,CAAC;EACvBY,IAAI,EAAE,UADiB;EAEvBC,YAAY,EAAEH,YAFS;EAGvBI,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxB;MACAD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;MACA,MAAMR,QAAQ,GAAGR,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAjB;;MACA,IAAGM,QAAH,EAAa;QACT,MAAMS,aAAa,GAAGd,IAAI,CAACC,KAAL,CAAWI,QAAX,CAAtB;QACAS,aAAa,CAACF,IAAd,CAAmB,EAAC,GAAGD,MAAM,CAACE;QAAX,CAAnB;QACAhB,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,UAA5B,EAAwCF,IAAI,CAACG,SAAL,CAAeW,aAAf,CAAxC;MACH;IACJ,CAVK;IAWNC,gBAAgB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACjC,MAAMK,WAAW,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACE,OAAtC,CAApB;;MACA,IAAGG,WAAH,EAAgB;QACZA,WAAW,CAACI,SAAZ,GAAwB,CAACJ,WAAW,CAACI,SAArC;MACH;IACJ;EAhBK;AAHa,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}