{"ast":null,"code":"// const initState = [\n//     { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\n//     { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\n//     { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\n// ]\n// const todoListReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case 'todoList/addTodo':\n//             return [...state, action.payload];\n//         case 'todoList/toggleTodoStatus':\n//             return state.map(todo => todo.id === action.payload ? {...todo, completed: !todo.completed} : todo);\n//         default:\n//             return state;\n//     }\n// }\n// export default todoListReducer;\nimport{createSlice}from'@reduxjs/toolkit';export default createSlice({name:'todoList',initialState:[{id:1,name:'Learn Yoga',completed:false,priority:'Medium'},{id:2,name:'Learn Redux',completed:true,priority:'High'},{id:3,name:'Learn JavaScript',completed:false,priority:'Low'}],reducers:{addTodo:function addTodo(state,action){//mutation || IMMER\nstate.push(action.payload);},toggleTodoStatus:function toggleTodoStatus(state,action){var currentTodo=state.find(function(todo){return todo.id===action.payload;});if(currentTodo){currentTodo.completed=!currentTodo.completed;}}}});","map":{"version":3,"names":["createSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo"],"sources":["C:/Users/Admin/Desktop/todo-app/src/components/TodoList/todoListSlice.js"],"sourcesContent":["// const initState = [\r\n//     { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n//     { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n//     { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n// ]\r\n\r\n// const todoListReducer = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case 'todoList/addTodo':\r\n//             return [...state, action.payload];\r\n\r\n//         case 'todoList/toggleTodoStatus':\r\n//             return state.map(todo => todo.id === action.payload ? {...todo, completed: !todo.completed} : todo);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default todoListReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n    name: 'todoList',\r\n    initialState: [\r\n        { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n        { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n        { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            //mutation || IMMER\r\n            state.push(action.payload)\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.find(todo => todo.id === action.payload);\r\n            if(currentTodo) {\r\n                currentTodo.completed = !currentTodo.completed;\r\n            }\r\n        }\r\n    }\r\n})"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,cAAeA,YAAW,CAAC,CACvBC,IAAI,CAAE,UADiB,CAEvBC,YAAY,CAAE,CACV,CAAEC,EAAE,CAAE,CAAN,CAASF,IAAI,CAAE,YAAf,CAA6BG,SAAS,CAAE,KAAxC,CAA+CC,QAAQ,CAAE,QAAzD,CADU,CAEV,CAAEF,EAAE,CAAE,CAAN,CAASF,IAAI,CAAE,aAAf,CAA8BG,SAAS,CAAE,IAAzC,CAA+CC,QAAQ,CAAE,MAAzD,CAFU,CAGV,CAAEF,EAAE,CAAE,CAAN,CAASF,IAAI,CAAE,kBAAf,CAAmCG,SAAS,CAAE,KAA9C,CAAqDC,QAAQ,CAAE,KAA/D,CAHU,CAFS,CAOvBC,QAAQ,CAAE,CACNC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CACxB;AACAD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB,EACH,CAJK,CAKNC,gBAAgB,CAAE,0BAACJ,KAAD,CAAQC,MAAR,CAAmB,CACjC,GAAMI,YAAW,CAAGL,KAAK,CAACM,IAAN,CAAW,SAAAC,IAAI,QAAIA,KAAI,CAACZ,EAAL,GAAYM,MAAM,CAACE,OAAvB,EAAf,CAApB,CACA,GAAGE,WAAH,CAAgB,CACZA,WAAW,CAACT,SAAZ,CAAwB,CAACS,WAAW,CAACT,SAArC,CACH,CACJ,CAVK,CAPa,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}