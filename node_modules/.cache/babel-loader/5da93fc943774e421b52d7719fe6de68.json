{"ast":null,"code":"// const initState = {\n//     search: '',\n//     status: 'All',\n//     priority: []\n// };\n// const filtersReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case 'filters/searchFilterChange':\n//             return {\n//                 ...state,\n//                 search: action.payload\n//             };\n//         case 'filters/statusFilterChange':\n//             return {\n//                 ...state,\n//                 status: action.payload\n//             }\n//         case 'filters/priorityFilterChange':\n//             return {\n//                 ...state,\n//                 priority: action.payload\n//             }\n//         default:\n//             return state;\n//     }\n// }\n// export default filtersReducer;\nimport{createSlice}from'@reduxjs/toolkit';export default createSlice({name:'filters',initialState:{search:'',status:'All',priority:[]},reducers:{searchFilterChange:function searchFilterChange(state,action){//mutation || IMMER\nstate.search=action.payload;},statusFilterChange:function statusFilterChange(state,action){state.status=action.payload;},priorityFilterChange:function priorityFilterChange(state,action){state.priority=action.payload;}}});","map":{"version":3,"names":["createSlice","name","initialState","search","status","priority","reducers","searchFilterChange","state","action","payload","statusFilterChange","priorityFilterChange"],"sources":["C:/Users/Admin/Desktop/todo-app/src/components/Filters/filtersSlice.js"],"sourcesContent":["// const initState = {\r\n//     search: '',\r\n//     status: 'All',\r\n//     priority: []\r\n// };\r\n\r\n// const filtersReducer = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case 'filters/searchFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 search: action.payload\r\n//             };\r\n//         case 'filters/statusFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 status: action.payload\r\n//             }\r\n//         case 'filters/priorityFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 priority: action.payload\r\n//             }\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default filtersReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        search: '',\r\n        status: 'All',\r\n        priority: []\r\n    },\r\n    reducers: {\r\n        searchFilterChange: (state, action) => {\r\n            //mutation || IMMER\r\n            state.search = action.payload\r\n        },\r\n        statusFilterChange: (state, action) => {\r\n            state.status = action.payload\r\n        },\r\n        priorityFilterChange: (state, action) => {\r\n            state.priority = action.payload\r\n        }\r\n    }\r\n})"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,cAAeA,YAAW,CAAC,CACvBC,IAAI,CAAE,SADiB,CAEvBC,YAAY,CAAE,CACVC,MAAM,CAAE,EADE,CAEVC,MAAM,CAAE,KAFE,CAGVC,QAAQ,CAAE,EAHA,CAFS,CAOvBC,QAAQ,CAAE,CACNC,kBAAkB,CAAE,4BAACC,KAAD,CAAQC,MAAR,CAAmB,CACnC;AACAD,KAAK,CAACL,MAAN,CAAeM,MAAM,CAACC,OAAtB,CACH,CAJK,CAKNC,kBAAkB,CAAE,4BAACH,KAAD,CAAQC,MAAR,CAAmB,CACnCD,KAAK,CAACJ,MAAN,CAAeK,MAAM,CAACC,OAAtB,CACH,CAPK,CAQNE,oBAAoB,CAAE,8BAACJ,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACH,QAAN,CAAiBI,MAAM,CAACC,OAAxB,CACH,CAVK,CAPa,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}