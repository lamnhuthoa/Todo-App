{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst todoSlice = createSlice({\n  name: 'todoList',\n  initialState: [{\n    id: 1,\n    name: 'Learn Yoga',\n    completed: false,\n    priority: 'Medium'\n  }, {\n    id: 2,\n    name: 'Learn Redux',\n    completed: true,\n    priority: 'High'\n  }, {\n    id: 3,\n    name: 'Learn JavaScript',\n    completed: false,\n    priority: 'Low'\n  }],\n  reducers: {\n    addTodo: (state, action) => {\n      // mutation || IMMER\n      state.push(action.payload);\n    },\n    toggleTodoStatus: (state, action) => {\n      const currentTodo = state.find(todo => todo.id === action.payload);\n\n      if (currentTodo) {\n        currentTodo.completed = !currentTodo.completed;\n      }\n    }\n  }\n});\nexport default todoSlice; //action (object) va action creator () => { return action }\n//thunk action (function) va thunk action creator () => { return thunk action }\n\nexport function addTodos(todo) {\n  //thunk function - thunk action\n  return function addTodosThunk(dispatch, getState) {};\n}","map":{"version":3,"names":["createSlice","todoSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","addTodos","addTodosThunk","dispatch","getState"],"sources":["C:/Users/Admin/Desktop/todo-app/src/components/TodoList/todoListSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todoList',\r\n    initialState: [\r\n        { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n        { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n        { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            // mutation || IMMER\r\n            state.push(action.payload)\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.find(todo => todo.id === action.payload);\r\n            if (currentTodo) {\r\n                currentTodo.completed = !currentTodo.completed;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default todoSlice;\r\n\r\n//action (object) va action creator () => { return action }\r\n//thunk action (function) va thunk action creator () => { return thunk action }\r\n\r\nexport function addTodos(todo) { //thunk function - thunk action\r\n    return function addTodosThunk(dispatch, getState) {\r\n        \r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,UADoB;EAE1BC,YAAY,EAAE,CACV;IAAEC,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,YAAf;IAA6BG,SAAS,EAAE,KAAxC;IAA+CC,QAAQ,EAAE;EAAzD,CADU,EAEV;IAAEF,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,aAAf;IAA8BG,SAAS,EAAE,IAAzC;IAA+CC,QAAQ,EAAE;EAAzD,CAFU,EAGV;IAAEF,EAAE,EAAE,CAAN;IAASF,IAAI,EAAE,kBAAf;IAAmCG,SAAS,EAAE,KAA9C;IAAqDC,QAAQ,EAAE;EAA/D,CAHU,CAFY;EAO1BC,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxB;MACAD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAJK;IAKNC,gBAAgB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACjC,MAAMI,WAAW,GAAGL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYM,MAAM,CAACE,OAAtC,CAApB;;MACA,IAAIE,WAAJ,EAAiB;QACbA,WAAW,CAACT,SAAZ,GAAwB,CAACS,WAAW,CAACT,SAArC;MACH;IACJ;EAVK;AAPgB,CAAD,CAA7B;AAqBA,eAAeJ,SAAf,C,CAEA;AACA;;AAEA,OAAO,SAASgB,QAAT,CAAkBD,IAAlB,EAAwB;EAAE;EAC7B,OAAO,SAASE,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C,CAEjD,CAFD;AAGH"},"metadata":{},"sourceType":"module"}